services:
    phpdish.manager.user:
        class: PHPDish\Bundle\UserBundle\Service\UserManager
        parent: fos_user.user_manager
        calls:
             - [setEventDispatcher, [ '@event_dispatcher']]
        public: true

    phpdish.avatar_generator.user:
        class: PHPDish\Component\Core\AvatarGenerator\AvatarGenerator
        arguments: ['@phpdish.media.file_manager.avatar', '@phpdish.media.file_namer.avatar']

    phpdish.event_lsitener.user_register:
        class: PHPDish\Bundle\UserBundle\EventListener\UserRegisterListener
        arguments: ['@router', '@phpdish.avatar_generator.user']
        tags:
            - {name: kernel.event_listener, event: fos_user.registration.success,  method: onRegisterSuccess}

    phpdish.event_lsitener.change_password:
        class: PHPDish\Bundle\UserBundle\EventListener\ChangePasswordListener
        arguments: ['@router']
        tags:
            - {name: kernel.event_listener, event: fos_user.change_password.edit.success,  method: onChangePassword}

    phpdish.oauth_aware.user_provider:
#        class: HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider
        class: PHPDish\Bundle\UserBundle\Security\Core\User\FOSUBUserProvider
        arguments:
          - '@fos_user.user_manager'
          - '@security.token_storage'
          - '@phpdish.media.file_downloader.avatar'
          - {weibo: weiboId, github: githubId}


   # Setting Menu
    phpdish.menu_builder.setting_menu:
        class: PHPDish\Bundle\UserBundle\Menu\SettingMenuBuilder
        arguments: ['@knp_menu.factory']
        tags:
           - { name: knp_menu.menu_builder, method: createMenu, alias: setting_menu}